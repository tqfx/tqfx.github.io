var searchIndex = new Map(JSON.parse('[\
["liba",{"doc":"An algorithm library based on C/C++ language","t":"QOOOONNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFONNNNNNOONONNNNOHHOINNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNHHFNNNNOINNNNNNNNNNNNNNNNNNNONNOOOOOOOONNNNFNNOCNONNNNNNNNNNNNNNNNNNNNNNOOONOOOOOOOOOONNNOFOOFFNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOFONFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNHHIOOOOOOOONNNNNFOOOONNNNNNNSSSSSSSSSSSSSSSSSSSSSHHHHHHHHHHHHH","n":["PID_FUZZY_BLOCK","a","a","a","ac","acc","acc","acc","acc","acc","alpha","alpha","alpha","alpha","am","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","crc16","crc32","crc64","crc8","de","default","default","default","default","default","den","dm","ec","eq","err","eval","eval","eval","eval","extra","f32_rsqrt","f64_rsqrt","fdb","float","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fuzzy","ge","gen","gen","gen","gen","gen","gen","gen","gen_lsb","gen_lsb","gen_lsb","gen_lsb","gen_msb","gen_msb","gen_msb","gen_msb","gt","hash_bkdr","hash_sdbm","hpf","inc","inc","inc","input","input","int","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iter","iter","iter","j","jer","jer","jm","k","kd","kd","ki","ki","kp","kp","kpid","kpid","kpid","le","lpf","lt","major","major","mf","minor","minor","new","new","new","new","new","new","new","new","new","new","new","new","new_lsb","new_lsb","new_lsb","new_lsb","new_msb","new_msb","new_msb","new_msb","num","op","out","outmax","outmin","output","output","output","p","p","p","p0","p0","p1","p1","pa","parse","partial_cmp","patch","pd","pid","pid","pid","pid_fuzzy","pid_neuro","pos","pos","pos","pos","pos","pos","pos","rule","run","run","run","set_alpha","set_block","set_den","set_num","sum","summax","summin","t","t","ta","ta","table","table","table","table","taj","td","td","tdj","tf","third","tostr","trajbell","trajpoly3","trajpoly5","trajpoly7","trajtrap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv","tweak","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_sqrt","u64_sqrt","uint","v","v","v","v0","v0","v1","v1","vc","vel","vel","vel","vel","vel","version","vm","wd","wi","wp","wpid","zero","zero","zero","zero","zero","zero","CAP","CAP_ALGEBRA","CAP_BOUNDED","CUP","CUP_ALGEBRA","CUP_BOUNDED","EQU","DSIG","GAUSS","GAUSS2","GBELL","LINS","LINZ","NUL","PI","PSIG","S","SIG","TRAP","TRI","Z","dsig","gauss","gauss2","gbell","lins","linz","pi","psig","s","sig","trap","tri","z"],"q":[[0,"liba"],[318,"liba::fuzzy"],[325,"liba::mf"],[352,"core::cmp"],[353,"core::option"],[354,"core::result"],[355,"core::any"]],"d":["compute size of memory block for fuzzy PID controller","coefficients of acceleration","coefficients of acceleration","coefficients of acceleration","acceleration before constant velocity","calculate acceleration for bell-shaped velocity trajectory","calculate acceleration for cubic polynomial trajectory","calculate acceleration for quintic polynomial trajectory","calculate acceleration for hepta polynomial trajectory","calculate acceleration for trapezoidal velocity trajectory","get alphabet for version","filter coefficient","filter coefficient","alphabet","maximum acceleration","get memory block for fuzzy PID controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","algorithm library version check","Cyclic Redundancy Check for 16 bits","Cyclic Redundancy Check for 32 bits","Cyclic Redundancy Check for 64 bits","Cyclic Redundancy Check for 8 bits","acceleration after constant velocity","","","","","","get denominator for transfer function","maximum deceleration","error change","","cache error","calculate for CRC-8","calculate for CRC-16","calculate for CRC-32","calculate for CRC-64","extra number","reciprocal of square-root, <code>\\\\frac{1}{\\\\sqrt{x}}</code>","reciprocal of square-root, <code>\\\\frac{1}{\\\\sqrt{x}}</code>","cache feedback","floating-point number stored using <code>f64</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","fuzzy PID controller operator","","generate for High Pass Filter","generate for Low Pass Filter","generate for bell-shaped velocity trajectory","generate for cubic polynomial trajectory","generate for quintic polynomial trajectory","generate for hepta polynomial trajectory","generate for trapezoidal velocity trajectory","generate for LSB CRC-8","generate for LSB CRC-16","generate for LSB CRC-32","generate for LSB CRC-64","generate for MSB CRC-8","generate for MSB CRC-16","generate for MSB CRC-32","generate for MSB CRC-64","","a hash function whose prime number is 131","a hash function whose prime number is 65599","High Pass Filter","calculate for incremental PID controller","calculate for incremental fuzzy PID controller","calculate for incremental single neuron PID controller","get input for transfer function","filter input","Equivalent to C’s int type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","calculate for High Pass Filter","calculate for Low Pass Filter","calculate for transfer function","coefficients of jerk","calculate jerk for bell-shaped velocity trajectory","calculate jerk for hepta polynomial trajectory","maximum jerk","proportional coefficient","derivative constant","base derivative constant","integral constant","base integral constant","proportional constant","base proportional constant","set proportional integral derivative constant for PID …","set proportional integral derivative constant for fuzzy …","set proportional integral derivative constant for single …","","Low Pass Filter","","algorithm library version major","major number","membership function","algorithm library version minor","minor number","initialize for High Pass Filter","initialize for Low Pass Filter","initialize for PID controller","initialize for fuzzy PID controller","initialize for single neuron PID controller","initialize for transfer function","initialize for bell-shaped velocity trajectory","initialize for cubic polynomial trajectory","initialize for quintic polynomial trajectory","initialize for hepta polynomial trajectory","initialize for trapezoidal velocity trajectory","initialize for version","initialize for LSB CRC-8","initialize for LSB CRC-16","initialize for LSB CRC-32","initialize for LSB CRC-64","initialize for MSB CRC-8","initialize for MSB CRC-16","initialize for MSB CRC-32","initialize for MSB CRC-64","get numerator for transfer function","set fuzzy relational operator for fuzzy PID controller","controller final output","maximum final output","minimum final output","get output for transfer function","filter output","filter output","coefficients of position","coefficients of position","coefficients of position","initial position","initial position","final position","final position","position before constant velocity","parse version string to version","","algorithm library version patch","position after constant velocity","proportional integral derivative controller","proportional integral derivative controller","proportional integral derivative controller","fuzzy proportional integral derivative controller","single neuron proportional integral derivative controller","calculate for positional PID controller","calculate for positional fuzzy PID controller","calculate position for bell-shaped velocity trajectory","calculate position for cubic polynomial trajectory","calculate position for quintic polynomial trajectory","calculate position for hepta polynomial trajectory","calculate position for trapezoidal velocity trajectory","set rule base for fuzzy PID controller","calculate for PID controller","calculate for fuzzy PID controller","calculate for single neuron PID controller","set alphabet for version","set memory block for fuzzy PID controller","set denominator for transfer function","set numerator for transfer function","controller integral output","maximum integral output","minimum integral output","total duration","total duration","acceleration phase","time before constant velocity","Cyclic Redundancy Check comparison table","Cyclic Redundancy Check comparison table","Cyclic Redundancy Check comparison table","Cyclic Redundancy Check comparison table","time-interval in which the jerk is constant (j max or j …","deceleration phase","time after constant velocity","time-interval in which the jerk is constant (j max or j …","transfer function","third number","convert version to string","bell-shaped velocity trajectory","cubic polynomial trajectory","quintic polynomial trajectory","hepta polynomial trajectory","trapezoidal velocity trajectory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","constant velocity phase","algorithm library version tweak","","","","","","","","","","","","","","","","","square root of an unsigned integer","square root of an unsigned integer","Equivalent to C’s unsigned int type.","coefficients of velocity","coefficients of velocity","coefficients of velocity","initial velocity","initial velocity","final velocity","final velocity","constant velocity","calculate velocity for bell-shaped velocity trajectory","calculate velocity for cubic polynomial trajectory","calculate velocity for quintic polynomial trajectory","calculate velocity for hepta polynomial trajectory","calculate velocity for trapezoidal velocity trajectory","version","maximum velocity","derivative weight","integral weight","proportional weight","set proportional integral derivative weight for single …","zeroing for High Pass Filter","zeroing for Low Pass Filter","zeroing for PID controller","zeroing for fuzzy PID controller","zeroing for single neuron PID controller","zeroing for transfer function","min(a,b)","a*b","max(a+b-1,0)","max(a,b)","a+b-a*b","min(a+b,1)","sqrt(a,b)<em>sqrt(1-(1-a)</em>(1-b))","difference between two sigmoidal membership functions","gaussian membership function","gaussian combination membership function","generalized bell-shaped membership function","linear s-shaped saturation membership function","linear z-shaped saturation membership function","none","pi-shaped membership function","product of two sigmoidal membership functions","s-shaped membership function","sigmoidal membership function","trapezoidal membership function","triangular membership function","z-shaped membership function","difference between two sigmoidal membership functions","gaussian membership function","gaussian combination membership function","generalized bell-shaped membership function","linear s-shaped saturation membership function","linear z-shaped saturation membership function","pi-shaped membership function","product of two sigmoidal membership functions","s-shaped membership function","sigmoidal membership function","trapezoidal membership function","triangular membership function","z-shaped membership function"],"i":[0,3,4,5,6,1,3,4,5,6,7,28,29,7,1,11,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,7,0,0,0,0,6,15,11,16,1,6,17,1,16,7,15,19,20,22,24,7,0,0,15,0,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,0,7,28,29,1,3,4,5,6,19,20,22,24,19,20,22,24,7,0,0,0,15,11,16,17,28,0,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,28,29,17,5,1,5,1,16,15,11,15,11,15,11,15,11,16,7,0,7,7,7,0,7,7,28,29,15,11,16,17,1,3,4,5,6,7,19,20,22,24,19,20,22,24,17,11,15,15,15,17,28,29,3,4,5,1,6,1,6,6,7,7,7,6,0,11,16,0,0,15,11,1,3,4,5,6,11,15,11,16,7,11,17,17,15,15,15,1,6,1,6,19,20,22,24,1,1,6,1,0,7,7,0,0,0,0,0,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,1,7,19,20,22,24,28,29,15,11,16,17,1,3,4,5,6,7,0,0,0,3,4,5,1,6,1,6,6,1,3,4,5,6,0,1,16,16,16,16,28,29,15,11,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,[[1,2],2],[[3,2],2],[[4,2],2],[[5,2],2],[[6,2],2],[[7,[9,[8]]],10],0,0,0,0,[11,[[12,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,13,13],14],0,0,0,0,0,[[],15],[[],11],[[],16],[[],1],[[],6],[17,[[12,[2]]]],0,0,[[7,7],18],0,[[19,[12,[8]],8],8],[[20,[12,[8]],21],21],[[22,[12,[8]],23],23],[[24,[12,[8]],25],25],0,[26,26],[27,27],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[7,7],18],[[28,2,2],28],[[29,2,2],29],[[1,2,2,2,2,2,2,2],2],[[3,2,2,2,2,2],3],[[4,2,2,2,2,2,2,2],4],[[5,2,2,2,2,2,2,2,2,2],5],[[6,2,2,2,2,2,2,2],2],[[19,8],19],[[20,21],20],[[22,23],22],[[24,25],24],[[19,8],19],[[20,21],20],[[22,23],22],[[24,25],24],[[7,7],18],[[[12,[8]],23],23],[[[12,[8]],23],23],0,[[15,2,2],2],[[11,2,2],2],[[16,2,2],2],[17,[[12,[2]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,2],2],[[29,2],2],[[17,2],2],0,[[1,2],2],[[5,2],2],0,0,0,0,0,0,0,0,[[15,2,2,2],15],[[11,2,2,2],11],[[16,2,2,2,2],16],[[7,7],18],0,[[7,7],18],[[],13],0,0,[[],13],0,[[2,2],28],[[2,2],29],[[],15],[[],11],[[],16],[[[12,[2]],[12,[2]],[12,[2]],[12,[2]]],17],[[],1],[[2,2,2,2,2],3],[[2,2,2,2,2,2,2],4],[[2,2,2,2,2,2,2,2,2],5],[[],6],[[13,13,13],7],[8,19],[21,20],[23,22],[25,24],[8,19],[21,20],[23,22],[25,24],[17,[[12,[2]]]],[[11,13],11],0,0,0,[17,[[12,[2]]]],0,0,0,0,0,0,0,0,0,0,[[7,30],13],[[7,7],[[32,[31]]]],[[],13],0,0,0,0,0,0,[[15,2,2],2],[[11,2,2],2],[[1,2],2],[[3,2],2],[[4,2],2],[[5,2],2],[[6,2],2],[[11,33,[12,[2]],[12,[2]],[12,[2]],[12,[2]],[12,[2]]],11],[[15,2,2],2],[[11,2,2],2],[[16,2,2],2],[[7,[12,[8]]],10],[[11,[12,[8]],33],11],[[17,[12,[2]],[12,[2]]],17],[[17,[12,[2]],[12,[2]]],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,[12,[8]]],14],0,0,0,0,0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],0,[[],23],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[23,21],[25,23],0,0,0,0,0,0,0,0,0,[[1,2],2],[[3,2],2],[[4,2],2],[[5,2],2],[[6,2],2],0,0,0,0,0,[[16,2,2,2],16],[28,28],[29,29],[15,15],[11,11],[16,16],[17,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2,2,2,2],2],[[2,2,2],2],[[2,2,2,2,2],2],[[2,2,2,2],2],[[2,2,2],2],[[2,2,2],2],[[2,2,2,2,2],2],[[2,2,2,2,2],2],[[2,2,2],2],[[2,2,2],2],[[2,2,2,2,2],2],[[2,2,2,2],2],[[2,2,2],2]],"c":[],"p":[[5,"trajbell",0],[8,"float",0],[5,"trajpoly3",0],[5,"trajpoly5",0],[5,"trajpoly7",0],[5,"trajtrap",0],[5,"version",0],[1,"u8"],[1,"array"],[1,"tuple"],[5,"pid_fuzzy",0],[1,"slice"],[8,"uint",0],[8,"int",0],[5,"pid",0],[5,"pid_neuro",0],[5,"tf",0],[1,"bool"],[5,"crc8",0],[5,"crc16",0],[1,"u16"],[5,"crc32",0],[1,"u32"],[5,"crc64",0],[1,"u64"],[1,"f32"],[1,"f64"],[5,"hpf",0],[5,"lpf",0],[1,"str"],[6,"Ordering",352],[6,"Option",353],[1,"usize"],[6,"Result",354],[5,"TypeId",355]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
